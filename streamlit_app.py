# -*- coding: utf-8 -*-
"""A*_final_streamlit.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o0Kh1PtWCYJaJtqkIT9RgS0umuyO_WGp
"""

pip install streamlit

import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt
import streamlit as st

# Load the dataset from Google Drive (assuming you have uploaded it somewhere)
dataset_path = '/content/drive/MyDrive/AI LaB/Lab Project/final_career.csv'  # Update the path to your dataset
df = pd.read_csv(dataset_path)

# Function to simulate A* search with decision path handling
def astar_search_with_graph(user_input, dataset):
    path = []

    if user_input['Group'] == 'Science' and user_input['Math_Score'] == 'High' and user_input['Tech_Interest'] == 'Yes':
        career = 'Engineer'
        path = [('Group', 'Science'), ('Math_Score', 'High'), ('Tech_Interest', 'Yes')]
    elif user_input['Group'] == 'Commerce' and user_input['Math_Score'] in ['Medium', 'Low'] and user_input['Experience'] in ['1 year', '2 years']:
        career = 'Banker'
        path = [('Group', 'Commerce'), ('Math_Score', user_input['Math_Score']), ('Experience', user_input['Experience'])]
    elif user_input['Group'] == 'Humanities' and user_input['Creativity'] == 'High' and user_input['Experience'] in ['2 years', '3 years']:
        career = 'Artist'
        path = [('Group', 'Humanities'), ('Creativity', 'High'), ('Experience', user_input['Experience'])]
    elif user_input['Group'] == 'Humanities' and user_input['Creativity'] == 'Medium' and user_input['Experience'] in ['1 year', '2 years']:
        career = 'Journalist'
        path = [('Group', 'Humanities'), ('Creativity', 'Medium'), ('Experience', user_input['Experience'])]
    else:
        career = 'Programmer'
        path = [('Group', user_input['Group']), ('Experience', user_input['Experience'])]

    return career, path

# Streamlit interface (UI)
st.title('Career Recommendation System')

# User input
group = st.selectbox('Select Group', ['Science', 'Commerce', 'Humanities'])
math_score = st.selectbox('Select Math Score', ['High', 'Medium', 'Low'])
creativity = st.selectbox('Select Creativity', ['High', 'Medium', 'Low'])
experience = st.selectbox('Select Experience', ['No experience', '1 year', '2 years', '3 years', '4 years', '5 years'])
tech_interest = st.selectbox('Select Tech Interest', ['Yes', 'No'])

# Button to get recommendation
if st.button('Get Career Recommendation'):
    user_input = {
        'Group': group,
        'Math_Score': math_score,
        'Creativity': creativity,
        'Experience': experience,
        'Tech_Interest': tech_interest
    }

    # Run the A* search and get recommendation
    career, path = astar_search_with_graph(user_input, df)

    st.write(f"Recommended Career: {career}")
    st.write(f"Decision Path: {path}")

    # Create and display the decision path graph
    G = nx.DiGraph()
    for i in range(len(path)-1):
        G.add_edge(f"{path[i][0]}={path[i][1]}", f"{path[i+1][0]}={path[i+1][1]}")
    G.add_edge(f"{path[-1][0]}={path[-1][1]}", f"Career={career}")

    # Plot the graph
    plt.figure(figsize=(10, 6))
    pos = nx.spring_layout(G, seed=42)
    nx.draw(G, pos, with_labels=True, node_size=3000, node_color='skyblue', font_size=10, font_weight='bold', edge_color='gray')
    plt.title(f"A* Path to Career: {career}", fontsize=14)
    st.pyplot()
